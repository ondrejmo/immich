---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: machinelearning

spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: machinelearning
      app.kubernetes.io/part-of: immich
  policyTypes:
    - Ingress
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: immich
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 443
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: immich
      ports:
        - protocol: TCP
          port: 3003

---

apiVersion: v1
kind: Service
metadata:
  name: machinelearning

spec:
  selector:
    app.kubernetes.io/name: machinelearning
    app.kubernetes.io/part-of: immich
  ports:
    - name: http
      port: 3003

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: machinelearning

spec:
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: machinelearning
      app.kubernetes.io/part-of: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: machinelearning
        app.kubernetes.io/part-of: immich
    spec:
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - {key: app.kubernetes.io/name, operator: In, values: [machinelearning]}
                    - {key: app.kubernetes.io/part-of, operator: In, values: [immich]}
      containers:
        - name: machinelearning
          image: ghcr.io/immich-app/immich-machine-learning:v1.109.2
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          ports:
            - name: http
              containerPort: 3003
          envFrom:
            - secretRef:
                name: immich-config
          volumeMounts:
            - name: cache
              mountPath: /cache
      volumes:
        - name: cache
          emptyDir: {}
