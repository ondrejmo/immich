---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: microservices

spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: microservices
      app.kubernetes.io/part-of: immich
  policyTypes:
    - Ingress
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: immich
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: immich
      ports:
        - protocol: TCP
          port: 3002
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
      ports:
        - name: metrics
          port: 8081

---

apiVersion: v1
kind: Service
metadata:
  name: microservices
  labels:
    app.kubernetes.io/name: microservices
    app.kubernetes.io/part-of: immich

spec:
  selector:
    app.kubernetes.io/name: microservices
    app.kubernetes.io/part-of: immich
  ports:
    - name: http
      port: 3002
    - name: metrics
      port: 8081

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservices

spec:
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: microservices
      app.kubernetes.io/part-of: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: microservices
        app.kubernetes.io/part-of: immich
    spec:
      automountServiceAccountToken: false
      securityContext:
        fsGroup: 1066
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - {key: app.kubernetes.io/name, operator: In, values: [microservices]}
                    - {key: app.kubernetes.io/part-of, operator: In, values: [immich]}
      containers:
        - name: microservices
          image: ghcr.io/immich-app/immich-server:v1.105.1
          command:
            - ./start.sh
          args:
            - microservices
          resources:
            limits:
              gpu.intel.com/i915: "1"
            requests:
              cpu: 10m
              memory: 128Mi
          ports:
            - name: http
              containerPort: 3002
            - name: metrics
              containerPort: 8081
          envFrom:
            - secretRef:
                name: immich-config
          volumeMounts:
            - name: data
              mountPath: /data # /usr/src/app/upload
      volumes:
        - name: data
          nfs:
            server: "192.168.1.100"
            path: /mnt/pictures

---

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: microservices

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: microservices
      app.kubernetes.io/part-of: immich
  endpoints:
    - port: metrics
