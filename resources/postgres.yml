---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres

spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/part-of: immich
  policyTypes:
    - Egress
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: immich
      ports:
        - protocol: TCP
          port: 5432

---

apiVersion: v1
kind: Service
metadata:
  name: postgres

spec:
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/part-of: immich
  ports:
    - name: postgres
      port: 5432

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-hl

spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/part-of: immich
  ports:
    - name: postgres
      port: 5432

--- 

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres

spec:
  replicas: 1
  serviceName: postgres-hl
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/part-of: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/part-of: immich
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: tensorchord/pgvecto-rs:pg14-v0.2.0
          resources:
            requests:
              cpu: 10m
              memory: 128Mi
          ports:
            - name: postgres
              containerPort: 5432
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U $POSTGRES_USER -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          envFrom:
            - secretRef:
                name: postgres-config
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: shm
              mountPath: /dev/shm
      volumes:
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 256Mi
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: 
          - ReadWriteOnce
        storageClassName: longhorn
        resources:
          requests:
            storage: 4Gi
